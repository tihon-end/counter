[{"D:\\it-camasutra\\counter\\my-app\\src\\App.tsx":"1","D:\\it-camasutra\\counter\\my-app\\src\\reportWebVitals.ts":"2","D:\\it-camasutra\\counter\\my-app\\src\\components\\Display\\Display.tsx":"3","D:\\it-camasutra\\counter\\my-app\\src\\components\\Counter\\Counter.tsx":"4","D:\\it-camasutra\\counter\\my-app\\src\\components\\Btn\\Btn.tsx":"5","D:\\it-camasutra\\counter\\my-app\\src\\index.tsx":"6","D:\\it-camasutra\\counter\\my-app\\src\\components\\redux\\reducer.ts":"7","D:\\it-camasutra\\counter\\my-app\\src\\store\\store.ts":"8","D:\\it-camasutra\\counter\\my-app\\src\\components\\LocalStorage\\localStorage.ts":"9","D:\\it-camasutra\\counter\\my-app\\src\\components\\Input\\InputStock.tsx":"10"},{"size":264,"mtime":1618304284029,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1610213405721,"results":"13","hashOfConfig":"12"},{"size":423,"mtime":1619258413980,"results":"14","hashOfConfig":"12"},{"size":3540,"mtime":1619259986428,"results":"15","hashOfConfig":"12"},{"size":486,"mtime":1619259460904,"results":"16","hashOfConfig":"12"},{"size":605,"mtime":1618948427475,"results":"17","hashOfConfig":"12"},{"size":2329,"mtime":1619037243288,"results":"18","hashOfConfig":"12"},{"size":1203,"mtime":1619036917714,"results":"19","hashOfConfig":"12"},{"size":590,"mtime":1619036645359,"results":"20","hashOfConfig":"12"},{"size":867,"mtime":1619165335899,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"w15cyn",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"D:\\it-camasutra\\counter\\my-app\\src\\App.tsx",["46"],"import React, {useState} from 'react';\r\nimport './App.css';\r\nimport Counter from \"./components/Counter/Counter\";\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Counter />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default App;\r\n","D:\\it-camasutra\\counter\\my-app\\src\\reportWebVitals.ts",[],"D:\\it-camasutra\\counter\\my-app\\src\\components\\Display\\Display.tsx",[],"D:\\it-camasutra\\counter\\my-app\\src\\components\\Counter\\Counter.tsx",["47"],"D:\\it-camasutra\\counter\\my-app\\src\\components\\Btn\\Btn.tsx",[],["48","49"],"D:\\it-camasutra\\counter\\my-app\\src\\index.tsx",[],"D:\\it-camasutra\\counter\\my-app\\src\\components\\redux\\reducer.ts",[],"D:\\it-camasutra\\counter\\my-app\\src\\store\\store.ts",["50"],"\r\n\r\nimport {applyMiddleware, combineReducers, createStore} from 'redux'\r\n// import thunkMiddleware from 'redux-thunk'\r\nimport {counterReducer} from \"../components/redux/reducer\";\r\nimport {loadState, saveState} from \"../components/LocalStorage/localStorage\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n// объединяя reducer-ы с помощью combineReducers,\r\n// мы задаём структуру нашего единственного объекта-состояния\r\nconst rootReducer = combineReducers({\r\n   counter: counterReducer\r\n})\r\n// непосредственно создаём store\r\nexport const store = createStore(rootReducer, loadState());  //, applyMiddleware(thunkMiddleware)\r\n// определить автоматически тип всего объекта состояния\r\n\r\nstore.subscribe(()=>{\r\n   saveState({\r\n      counter: store.getState().counter\r\n   })\r\n})\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n// export type AppRootStateType = typeof store   типизация стора\r\n\r\n// а это, чтобы можно было в консоли браузера обращаться к store в любой момент\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\n","D:\\it-camasutra\\counter\\my-app\\src\\components\\LocalStorage\\localStorage.ts",[],"D:\\it-camasutra\\counter\\my-app\\src\\components\\Input\\InputStock.tsx",[],["51","52"],{"ruleId":"53","severity":1,"message":"54","line":1,"column":16,"nodeType":"55","messageId":"56","endLine":1,"endColumn":24},{"ruleId":"53","severity":1,"message":"57","line":7,"column":5,"nodeType":"55","messageId":"56","endLine":7,"endColumn":20},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"53","severity":1,"message":"62","line":3,"column":9,"nodeType":"55","messageId":"56","endLine":3,"endColumn":24},{"ruleId":"58","replacedBy":"63"},{"ruleId":"60","replacedBy":"64"},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'onChangeErrorAC' is defined but never used.","no-native-reassign",["65"],"no-negated-in-lhs",["66"],"'applyMiddleware' is defined but never used.",["65"],["66"],"no-global-assign","no-unsafe-negation"]