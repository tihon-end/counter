{"version":3,"sources":["components/Display/Display.module.css","components/Btn/Btn.module.css","components/Counter/Counter.module.css","components/Display/Display.tsx","components/Btn/Btn.tsx","components/Input/InputStock.tsx","components/redux/reducer.ts","components/Counter/Counter.tsx","App.tsx","reportWebVitals.ts","store/store.ts","components/LocalStorage/localStorage.ts","index.tsx"],"names":["module","exports","Display","props","styleBlock","count","maxValue","style","blockAlarm","block","className","Btn","Button","color","variant","size","btn","onClick","onClickHe","disabled","isDisabled","title","InputStock","TextField","name","label","margin","type","value","onChange","setting","initialState","startCount","Number","error","counterReducer","state","action","Counter","useSelector","counter","dispatch","useDispatch","validate","test","String","input","Card","Grid","container","padding","Paper","width","display","justifyContent","item","flexDirection","alignItems","event","currentTarget","valueAsNumber","onChangeStartCountAC","onChangeMaxValueAC","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","serializedState","localStorage","getItem","JSON","parse","err","loadState","subscribe","stringify","setItem","saveState","getState","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78e5e8bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Display_block__3I5I-\",\"blockAlarm\":\"Display_blockAlarm__2wTQ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Btn_btn__1ZMIh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Counter_form__vieyw\",\"btn\":\"Counter_btn__1c13t\"};","import React from \"react\";\r\nimport style from './Display.module.css'\r\n\r\nexport type DisplayType = {\r\n    maxValue: number\r\n    count: number\r\n    error: boolean\r\n\r\n}\r\n\r\nexport function Display(props: DisplayType) {\r\n let styleBlock: string = ((props.count === props.maxValue ) ? style.blockAlarm : style.block)\r\n    return (\r\n        <div className={styleBlock}>{props.count} </div>\r\n    )\r\n}\r\n\r\nexport default Display","import React from \"react\";\r\nimport style from './Btn.module.css'\r\nimport {Button} from \"@material-ui/core\";\r\n\r\n\r\nexport type BtnType = {\r\n    onClickHe: () => void\r\n    title: string\r\n    isDisabled: boolean\r\n}\r\n\r\nexport function Btn(props: BtnType) {\r\n\r\n    return (\r\n        <Button color={'primary'} variant={\"outlined\"} size={\"small\"} className={style.btn} onClick={() => {props.onClickHe()}}\r\n                disabled={props.isDisabled}\r\n        >{props.title}  </Button>\r\n    )\r\n}","import React, {ChangeEvent} from \"react\";\r\n\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\n\r\n\r\n\r\nexport type InputType = {\r\n    value: number\r\n    setting: (event: ChangeEvent<HTMLInputElement>) => void\r\nlabel: string\r\n    variant: string\r\n    name: string\r\n\r\n\r\n\r\n}\r\n\r\n\r\nfunction InputStock(props: InputType) {\r\n    // let setValue = (event: ChangeEvent<HTMLInputElement>) => {\r\n    //     let value = Number(event.currentTarget.value)\r\n    //    props.setValue(value)\r\n\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\nname={props.name}\r\n                style={{color: 'red'}}\r\n\r\n                size={'small'}  variant={\"outlined\"} label={props.label} margin={'normal'}\r\n                        type='number' value={props.value}\r\n                       onChange={props.setting}  />\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default InputStock","\r\n\r\nexport type CounterType = {\r\n    count: number\r\n    maxValue: number\r\n    startCount: number\r\n    error: boolean\r\n\r\n}\r\n\r\n\r\n let initialState: CounterType = {\r\n    count:  0,\r\n    maxValue: 5,\r\n    startCount: Number(''),\r\n    error: false,\r\n\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const counterReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"CLICK-IN\": {\r\n            return {\r\n                ...state, count: state.count + 1\r\n            }\r\n        }\r\n        case \"CLICK-RES\": {\r\n            return {\r\n                ...state, count: state.count = 0\r\n            }\r\n        }\r\n        case \"ON-CHANGE-MAX-VALUE\": {\r\n            return {\r\n                ...state, maxValue: action.maxValue\r\n            }\r\n        }\r\n        case \"ON-CHANGE-START-COUNT\": {\r\n            return {\r\n                ...state, startCount: action.startCount\r\n            }\r\n        }\r\n        case \"ON-CHANGE-SET\": {\r\n            return {\r\n                ...state, count: state.startCount,\r\n            }\r\n        }\r\n        case \"ON-CHANGE-ERROR\":{\r\n            return {\r\n                ...state, error: action.error\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setClickInAC = () => ({type: 'CLICK-IN'} as const)\r\nexport const setClickResAC = () => ({type: 'CLICK-RES'} as const)\r\nexport const onChangeMaxValueAC = (maxValue: number) => ({type: 'ON-CHANGE-MAX-VALUE', maxValue} as const)\r\nexport const onChangeStartCountAC = (startCount: number) => ({type: 'ON-CHANGE-START-COUNT', startCount} as const)\r\nexport const onChangeSetAC = () => ({type: 'ON-CHANGE-SET'} as const)\r\nexport const onChangeErrorAC = (error: boolean) => ({type: 'ON-CHANGE-ERROR', error} as const)\r\n\r\n\r\nexport type SetClickInACType = ReturnType<typeof setClickInAC>\r\nexport type setClickResACType = ReturnType<typeof setClickResAC>\r\nexport type onChangeMaxValueACType = ReturnType<typeof onChangeMaxValueAC>\r\nexport type onChangeStartCountACType = ReturnType<typeof onChangeStartCountAC>\r\nexport type onChangeSetACType = ReturnType<typeof onChangeSetAC>\r\nexport type onChangeErrorACType = ReturnType<typeof onChangeErrorAC>\r\n\r\n\r\ntype ActionsType = SetClickInACType\r\n    | setClickResACType\r\n    | onChangeMaxValueACType\r\n    | onChangeStartCountACType\r\n    | onChangeSetACType\r\n    | onChangeErrorACType\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default counterReducer\r\n\r\n","import React, {ChangeEvent} from \"react\";\r\nimport {Display} from \"../Display/Display\";\r\nimport {Btn} from \"../Btn/Btn\";\r\nimport style from './Counter.module.css'\r\nimport InputStock from \"../Input/InputStock\"\r\nimport {\r\n    onChangeErrorAC,\r\n    onChangeMaxValueAC,\r\n    onChangeSetAC,\r\n    onChangeStartCountAC,\r\n    setClickInAC,\r\n    setClickResAC\r\n} from \"../redux/reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport { Card, Grid, Paper } from \"@material-ui/core\";\r\n\r\n\r\n\r\nfunction Counter() {\r\n\r\n\r\n    const count = useSelector<AppRootStateType, number>(state => state.counter.count)\r\n    const maxValue = useSelector<AppRootStateType, number>(state => state.counter.maxValue)\r\n    let startCount = useSelector<AppRootStateType, number>(state => state.counter.startCount)\r\n    const error = useSelector<AppRootStateType, boolean>(state => state.counter.error)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    function clickIn() {\r\n        dispatch(setClickInAC())\r\n\r\n    }\r\n\r\n    function clickRes() {\r\n        dispatch(setClickResAC())\r\n\r\n    }\r\n\r\n\r\n    let onChangeMaxValue = (event: ChangeEvent<HTMLInputElement>) => {\r\n        let maxValue = event.currentTarget.valueAsNumber\r\n        dispatch(onChangeMaxValueAC(maxValue))\r\n    }\r\n\r\n    let onChangeStartCount = (event: ChangeEvent<HTMLInputElement>) => {\r\n        let startCount = event.currentTarget.valueAsNumber                      //Number() не работает\r\n        dispatch(onChangeStartCountAC(startCount))\r\n    }\r\n\r\n\r\n    let set = () => {\r\n        dispatch(onChangeSetAC())\r\n\r\n    }\r\n\r\n\r\n\r\n let   validate = (!/^[0-9]/i.test(String(startCount )) || (!/^[0-9]/i.test(String(maxValue )))||\r\n    (startCount>=maxValue) )? <div>{'enter correct value'}</div> : null\r\n\r\n    return (\r\n        <div className={style.input}>\r\n\r\n            <Card variant={\"outlined\"} >\r\n                <Grid container style={{padding: '20px'}}>\r\n                    <Paper style={{width: '100%'}}>\r\n                        <Display count={count} maxValue={maxValue} error={error}/>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid container style={{display: 'flex', justifyContent: 'center'}}>\r\n                    <Grid item style={{margin: '5px'}}>\r\n                        <Btn title={'inc'} onClickHe={clickIn} isDisabled={count === maxValue}/>\r\n                    </Grid>\r\n                    <Grid item style={{margin: '5px'}}>\r\n                        <Btn onClickHe={clickRes} title={'reset'} isDisabled={count === 0}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Paper\r\n                    style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\r\n                    <Grid item style={{margin: '5px'}}>\r\n                        <InputStock name={'start'} value={startCount} setting={onChangeStartCount} label={'start'}\r\n                                    variant={\"outlined\"} />\r\n                    </Grid>\r\n                    <Grid item style={{margin: '5px'}}>\r\n                        <InputStock name={'max'} value={maxValue} setting={onChangeMaxValue} label={'max'} variant={\"outlined\"}/>\r\n                        {validate}\r\n                    </Grid>\r\n                    <Grid item style={{margin: '5px'}}>\r\n                        <Btn onClickHe={set} title={'set'} isDisabled={startCount>=maxValue }/>\r\n                    </Grid>\r\n                </Paper>\r\n            </Card>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Counter\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport Counter from \"./components/Counter/Counter\";\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Counter />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\n\r\nimport {applyMiddleware, combineReducers, createStore} from 'redux'\r\n// import thunkMiddleware from 'redux-thunk'\r\nimport {counterReducer} from \"../components/redux/reducer\";\r\nimport {loadState, saveState} from \"../components/LocalStorage/localStorage\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n// объединяя reducer-ы с помощью combineReducers,\r\n// мы задаём структуру нашего единственного объекта-состояния\r\nconst rootReducer = combineReducers({\r\n   counter: counterReducer\r\n})\r\n// непосредственно создаём store\r\nexport const store = createStore(rootReducer, loadState());  //, applyMiddleware(thunkMiddleware)\r\n// определить автоматически тип всего объекта состояния\r\n\r\nstore.subscribe(()=>{\r\n   saveState({\r\n      counter: store.getState().counter\r\n   })\r\n})\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n// export type AppRootStateType = typeof store   типизация стора\r\n\r\n// а это, чтобы можно было в консоли браузера обращаться к store в любой момент\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\n\r\n\r\n","import {AppRootStateType} from \"../../store/store\";\r\n\r\nexport const loadState = ()=>{\r\n    try {\r\n        const serializedState = localStorage.getItem('app-state')\r\n        if (serializedState === null){\r\n            return undefined\r\n        }\r\n        return JSON.parse(serializedState)\r\n    }catch (err){\r\n        return undefined\r\n    }\r\n}\r\n\r\n\r\nexport const saveState = (state: AppRootStateType) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem('app-state', serializedState);\r\n    } catch {\r\n        // ignore write errors\r\n    }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./store/store\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n          <App/>\r\n      </Provider>\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}